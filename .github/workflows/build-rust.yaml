name: eucalypt build

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      narrative:
        description: 'Reason for build'
        required: false

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  release-linux:
    needs: [check, test, fmt, clippy]
    name: Release Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: build and install temporary eu
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path .
      - name: prepare build files for new version
        run: |
          export OSTYPE=$(uname)
          export HOSTTYPE=$(uname -m)

          eu -t build-meta > build-meta.yaml.new
          mv -f build-meta.yaml.new build-meta.yaml

          echo "TAG_NAME=$(eu -t version)" >> $GITHUB_ENV
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --release
      - run: |
          strip target/release/eu
          mv target/release/eu target/release/eu_amd64
      - name: run final test with release binary
        run: |
          target/release/eu_amd64 -v
          target/release/eu_amd64 harness -T -L harness/test
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/eu_amd64
          draft: true
          tag_name: env.TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
