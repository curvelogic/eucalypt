tests: {
  α: dict.empty //= dict.empty
  β: dict.empty dict.put(1, 4) dict.put(2, 3) //= dict.empty dict.put(2, 3) dict.put(1, 4)
  γ: dict.empty dict.put(1, 4) dict.put(1, 3) //= dict.empty dict.put(1, 3)
  δ: [1, 4] dict.put-into(dict.empty) //= dict.empty dict.put-pair([1, 4])
  ε: dict.from-pairs([[:a, 2], [:b, 3], [:b, 6]]) //= dict.from({ a: 2 b: 6})
  ζ: dict.from-pairs([[:a, 1], ["a", 2], [set.empty, dict.empty]]) dict.get(set.empty) //= dict.empty
  η: dict.from({a: 1}) dict.del(:a) //= dict.empty
  θ: dict.from-pairs([["a", 1], ["a", 2], ["a", 3]]) dict.del("a") //= dict.empty
  ι: dict.from({}) //= dict.empty
  κ: dict.empty dict.del(:a) //= dict.empty
  λ: dict.from-pairs([[:a, :b], [:c, :d]]) dict.get-or(:b, :z) //= :z
  μ: dict.from({a: 1 b: 3}) dict.update-or(:a, * 2, 99) //= dict.from({a: 2 b: 3})
  ν: dict.from({a: 1 b: 3}) dict.update-or(:c, * 2, 99) //= dict.from({a: 1 b: 3 c: 99})
  ξ: dict.from({a: 1 b: 2}) dict.entries //= [[:a, 1], [:b, 2]]
  ο: dict.from-pairs([[:a, 1], [:b, 2]]) dict.entries block //= { a: 1 b: 2 }
}

RESULT: tests values all-true? then(:PASS, :FAIL)
